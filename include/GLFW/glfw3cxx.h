#ifndef _glfw3cxx_h_
#define _glfw3cxx_h_

namespace glfw
{
    namespace{
        #include<GLFW/glfw3.h>
    }
    constexpr static auto True = GLFW_TRUE;
    constexpr static auto False = GLFW_FALSE;

    typedef void (*GlProc)(void);
    typedef void (*VkProc)(void);
    typedef struct GLFWMonitor Monitor;
    typedef struct GLFWwindow Window;
    typedef struct GLFWcursor Cursor;
    typedef void (*ErrorFun)(int,const char*);
    typedef void (*WindowPosFun)(Window*,int,int);
    typedef void (*WindowSizeFun)(Window*,int,int);
    typedef void (*WindowCloseFun)(Window*);
    typedef void (*WindowRefreshFun)(Window*);
    typedef void (*WindowFocusFun)(Window*,int);
    typedef void (*WindowIconifyFun)(Window*,int);
    typedef void (*WindowMaximizeFun)(Window*,int);
    typedef void (*FrameBufferSizeFun)(Window*,int,int);
    typedef void (*WindowContentScaleFun)(Window*,float,float);
    typedef void (*MouseButtonFun)(Window*,int,int,int);
    typedef void (*CursorPosFun)(Window*,double,double);
    typedef void (*CursorEnterFun)(Window*,int);
    typedef void (*ScrollFun)(Window*,double,double);
    typedef void (*KeyFun)(Window*,int,int,int,int);
    typedef void (*CharFun)(Window*,unsigned int);
    typedef void (*CharModsFun)(Window*,unsigned int,int);
    typedef void (*DropFun)(Window*,int,const char**);
    typedef void (*MonitorFun)(Monitor*,int);
    typedef void (*JoystickFun)(int,int);
    typedef struct GLFWvidmode VidMode;
    typedef struct GLFWgammaramp GammaRamp;
    typedef struct GLFWimage Image;
    typedef struct GLFWgamepadstate GamepadState;

    constexpr static auto Init = static_cast<int(*)(void)>(&glfwInit);
    constexpr static auto Terminate = static_cast<void(*)(void)>(&glfwTerminate);
    constexpr static auto InitHint = static_cast<void(*)(int,int)>(&glfwInitHint);
    constexpr static auto GetVersion = static_cast<void(*)(int*,int* minor, int*)>(&glfwGetVersion);
    constexpr static auto GetVersionString = static_cast<const char* (*)(void)>(&glfwGetVersionString);
    constexpr static auto GetError = static_cast<int(*)(const char**)>(&glfwGetError);
    constexpr static auto SetErrorCallback = static_cast<ErrorFun(*)(ErrorFun)>(&glfwSetErrorCallback);
    const static auto GetMonitors = reinterpret_cast<Monitor**(*)(int*)>(&glfwGetMonitors);
    const static auto GetPrimaryMonitor = reinterpret_cast<Monitor*(*)(void)>(&glfwGetPrimaryMonitor);
    const static auto GetMonitorPos = reinterpret_cast<void(*)(Monitor*,int* xpos, int*)>(&glfwGetMonitorPos);
    const static auto GetMonitorWorkArea = reinterpret_cast<void(*)(Monitor*,int* xpos, int* ypos, int* width, int*)>(&glfwGetMonitorWorkarea);
    const static auto GetMonitorPhysicalSize = reinterpret_cast<void(*)(Monitor*,int* widthMM, int*)>(&glfwGetMonitorPhysicalSize);
    const static auto GetMonitorContentScale = reinterpret_cast<void(*)(Monitor*,float* xscale, float*)>(&glfwGetMonitorContentScale);
    const static auto GetMonitorName = reinterpret_cast<const char* (*)(Monitor*)>(&glfwGetMonitorName);
    const static auto SetMonitorUserPointer = reinterpret_cast<void(*)(Monitor*,void*)>(&glfwSetMonitorUserPointer);
    const static auto GetMonitorUserPointer = reinterpret_cast<void*(*)(Monitor*)>(&glfwGetMonitorUserPointer);
    const static auto SetMonitorCallback = reinterpret_cast<MonitorFun(*)(MonitorFun)>(&glfwSetMonitorCallback);
    const static auto GetVideoModes = reinterpret_cast<const VidMode* (*)(Monitor*,int*)>(&glfwGetVideoModes);
    const static auto GetVideoMode = reinterpret_cast<const VidMode* (*)(Monitor*)>(&glfwGetVideoMode);
    const static auto SetGamma = reinterpret_cast<void(*)(Monitor*,float)>(&glfwSetGamma);
    const static auto GetGammaRamp = reinterpret_cast<const GammaRamp* (*)(Monitor*)>(&glfwGetGammaRamp);
    const static auto SetGammaRamp = reinterpret_cast<void(*)(Monitor*,const GammaRamp*)>(&glfwSetGammaRamp);
    constexpr static auto DefaultWindowHints = static_cast<void(*)(void)>(&glfwDefaultWindowHints);
    constexpr static auto WindowHint = static_cast<void(*)(int,int)>(&glfwWindowHint);
    constexpr static auto WindowHintString = static_cast<void(*)(int,const char*)>(&glfwWindowHintString);
    const static auto CreateWindow = reinterpret_cast<Window*(*)(int,int height, const char* title, Monitor* monitor, Window*)>(&glfwCreateWindow);
    constexpr static auto DestroyWindow = static_cast<void(*)(Window*)>(&glfwDestroyWindow);
    constexpr static auto WindowShouldClose = static_cast<int(*)(Window*)>(&glfwWindowShouldClose);
    constexpr static auto SetWindowShouldClose = static_cast<void(*)(Window*,int)>(&glfwSetWindowShouldClose);
    constexpr static auto SetWindowTitle = static_cast<void(*)(Window*,const char*)>(&glfwSetWindowTitle);
    constexpr static auto SetWindowIcon = static_cast<void(*)(Window*,int count, const Image*)>(&glfwSetWindowIcon);
    constexpr static auto GetWindowPos = static_cast<void(*)(Window*,int* xpos, int*)>(&glfwGetWindowPos);
    constexpr static auto SetWindowPos = static_cast<void(*)(Window*,int xpos, int)>(&glfwSetWindowPos);
    constexpr static auto GetWindowSize = static_cast<void(*)(Window*,int* width, int*)>(&glfwGetWindowSize);
    constexpr static auto SetWindowSizeLimits = static_cast<void(*)(Window*,int minwidth, int minheight, int maxwidth, int)>(&glfwSetWindowSizeLimits);
    constexpr static auto SetWindowAspectRatio = static_cast<void(*)(Window*,int numer, int)>(&glfwSetWindowAspectRatio);
    constexpr static auto SetWindowSize = static_cast<void(*)(Window*,int width, int)>(&glfwSetWindowSize);
    constexpr static auto GetFramebufferSize = static_cast<void(*)(Window*,int* width, int*)>(&glfwGetFramebufferSize);
    constexpr static auto GetWindowFrameSize = static_cast<void(*)(Window*,int* left, int* top, int* right, int*)>(&glfwGetWindowFrameSize);
    constexpr static auto GetWindowContentScale = static_cast<void(*)(Window*,float* xscale, float*)>(&glfwGetWindowContentScale);
    constexpr static auto GetWindowOpacity = static_cast<float(*)(Window*)>(&glfwGetWindowOpacity);
    constexpr static auto SetWindowOpacity = static_cast<void(*)(Window*,float)>(&glfwSetWindowOpacity);
    constexpr static auto IconifyWindow = static_cast<void(*)(Window*)>(&glfwIconifyWindow);
    constexpr static auto RestoreWindow = static_cast<void(*)(Window*)>(&glfwRestoreWindow);
    constexpr static auto MaximizeWindow = static_cast<void(*)(Window*)>(&glfwMaximizeWindow);
    constexpr static auto ShowWindow = static_cast<void(*)(Window*)>(&glfwShowWindow);
    constexpr static auto HideWindow = static_cast<void(*)(Window*)>(&glfwHideWindow);
    constexpr static auto FocusWindow = static_cast<void(*)(Window*)>(&glfwFocusWindow);
    constexpr static auto RequestWindowAttention = static_cast<void(*)(Window*)>(&glfwRequestWindowAttention);
    const static auto GetWindowMonitor = reinterpret_cast<Monitor*(*)(Window*)>(&glfwGetWindowMonitor);
    const static auto SetWindowMonitor = reinterpret_cast<void(*)(Window*,Monitor* monitor, int xpos, int ypos, int width, int height, int)>(&glfwSetWindowMonitor);
    constexpr static auto GetWindowAttrib = static_cast<int(*)(Window*,int)>(&glfwGetWindowAttrib);
    constexpr static auto SetWindowAttrib = static_cast<void(*)(Window*,int attrib, int)>(&glfwSetWindowAttrib);
    constexpr static auto SetWindowUserPointer = static_cast<void(*)(Window*,void*)>(&glfwSetWindowUserPointer);
    constexpr static auto GetWindowUserPointer = static_cast<void*(*)(Window*)>(&glfwGetWindowUserPointer);
    constexpr static auto SetWindowPosCallback = static_cast<WindowPosFun(*)(Window*,WindowPosFun)>(&glfwSetWindowPosCallback);
    constexpr static auto SetWindowSizeCallback = static_cast<WindowSizeFun(*)(Window*,WindowSizeFun)>(&glfwSetWindowSizeCallback);
    constexpr static auto SetWindowCloseCallback = static_cast<WindowCloseFun(*)(Window*,WindowCloseFun)>(&glfwSetWindowCloseCallback);
    constexpr static auto SetWindowRefreshCallback = static_cast<WindowRefreshFun(*)(Window*,WindowRefreshFun)>(&glfwSetWindowRefreshCallback);
    constexpr static auto SetWindowFocusCallback = static_cast<WindowFocusFun(*)(Window*,WindowFocusFun)>(&glfwSetWindowFocusCallback);
    constexpr static auto SetWindowIconifyCallback = static_cast<WindowIconifyFun(*)(Window*,WindowIconifyFun)>(&glfwSetWindowIconifyCallback);
    constexpr static auto SetWindowMaximizeCallback = static_cast<WindowMaximizeFun(*)(Window*,WindowMaximizeFun)>(&glfwSetWindowMaximizeCallback);
    constexpr static auto SetFramebufferSizeCallback = static_cast<FrameBufferSizeFun(*)(Window*,FrameBufferSizeFun)>(&glfwSetFramebufferSizeCallback);
    constexpr static auto SetWindowContentScaleCallback = static_cast<WindowContentScaleFun(*)(Window*,WindowContentScaleFun)>(&glfwSetWindowContentScaleCallback);
    constexpr static auto PollEvents = static_cast<void(*)(void)>(&glfwPollEvents);
    constexpr static auto WaitEvents = static_cast<void(*)(void)>(&glfwWaitEvents);
    constexpr static auto WaitEventsTimeout = static_cast<void(*)(double)>(&glfwWaitEventsTimeout);
    constexpr static auto PostEmptyEvent = static_cast<void(*)(void)>(&glfwPostEmptyEvent);
    constexpr static auto GetInputMode = static_cast<int(*)(Window*,int)>(&glfwGetInputMode);
    constexpr static auto SetInputMode = static_cast<void(*)(Window*,int mode, int)>(&glfwSetInputMode);
    constexpr static auto RawMouseMotionSupported = static_cast<int(*)(void)>(&glfwRawMouseMotionSupported);
    constexpr static auto GetKeyName = static_cast<const char* (*)(int,int)>(&glfwGetKeyName);
    constexpr static auto GetKeyScancode = static_cast<int(*)(int)>(&glfwGetKeyScancode);
    constexpr static auto GetKey = static_cast<int(*)(Window*,int)>(&glfwGetKey);
    constexpr static auto GetMouseButton = static_cast<int(*)(Window*,int)>(&glfwGetMouseButton);
    constexpr static auto GetCursorPos = static_cast<void(*)(Window*,double* xpos, double*)>(&glfwGetCursorPos);
    constexpr static auto SetCursorPos = static_cast<void(*)(Window*,double xpos, double)>(&glfwSetCursorPos);
    constexpr static auto CreateCursor = static_cast<Cursor*(*)(const Image*,int xhot, int)>(&glfwCreateCursor);
    constexpr static auto CreateStandardCursor = static_cast<Cursor*(*)(int)>(&glfwCreateStandardCursor);
    constexpr static auto DestroyCursor = static_cast<void(*)(Cursor*)>(&glfwDestroyCursor);
    constexpr static auto SetCursor = static_cast<void(*)(Window*,Cursor*)>(&glfwSetCursor);
    constexpr static auto SetKeyCallback = static_cast<KeyFun(*)(Window*,KeyFun)>(&glfwSetKeyCallback);
    constexpr static auto SetCharCallback = static_cast<CharFun(*)(Window*,CharFun)>(&glfwSetCharCallback);
    constexpr static auto SetCharModsCallback = static_cast<CharModsFun(*)(Window*,CharModsFun)>(&glfwSetCharModsCallback);
    constexpr static auto SetMouseButtonCallback = static_cast<MouseButtonFun(*)(Window*,MouseButtonFun)>(&glfwSetMouseButtonCallback);
    constexpr static auto SetCursorPosCallback = static_cast<CursorPosFun(*)(Window*,CursorPosFun)>(&glfwSetCursorPosCallback);
    constexpr static auto SetCursorEnterCallback = static_cast<CursorEnterFun(*)(Window*,CursorEnterFun)>(&glfwSetCursorEnterCallback);
    constexpr static auto SetScrollCallback = static_cast<ScrollFun(*)(Window*,ScrollFun)>(&glfwSetScrollCallback);
    constexpr static auto SetDropCallback = static_cast<DropFun(*)(Window*,DropFun)>(&glfwSetDropCallback);
    constexpr static auto JoystickPresent = static_cast<int(*)(int)>(&glfwJoystickPresent);
    constexpr static auto GetJoystickAxes = static_cast<const float* (*)(int,int*)>(&glfwGetJoystickAxes);
    constexpr static auto GetJoystickButtons = static_cast<const unsigned char* (*)(int,int*)>(&glfwGetJoystickButtons);
    constexpr static auto GetJoystickHats = static_cast<const unsigned char* (*)(int,int*)>(&glfwGetJoystickHats);
    constexpr static auto GetJoystickName = static_cast<const char* (*)(int)>(&glfwGetJoystickName);
    constexpr static auto GetJoystickGUID = static_cast<const char* (*)(int)>(&glfwGetJoystickGUID);
    constexpr static auto SetJoystickUserPointer = static_cast<void(*)(int,void*)>(&glfwSetJoystickUserPointer);
    constexpr static auto GetJoystickUserPointer = static_cast<void*(*)(int)>(&glfwGetJoystickUserPointer);
    constexpr static auto JoystickIsGamepad = static_cast<int(*)(int)>(&glfwJoystickIsGamepad);
    constexpr static auto SetJoystickCallback = static_cast<JoystickFun(*)(JoystickFun)>(&glfwSetJoystickCallback);
    constexpr static auto UpdateGamepadMappings = static_cast<int(*)(const char*)>(&glfwUpdateGamepadMappings);
    constexpr static auto GetGamepadName = static_cast<const char* (*)(int)>(&glfwGetGamepadName);
    constexpr static auto GetGamepadState = static_cast<int(*)(int,GamepadState*)>(&glfwGetGamepadState);
    constexpr static auto SetClipboardString = static_cast<void(*)(Window*,const char*)>(&glfwSetClipboardString);
    constexpr static auto GetClipboardString = static_cast<const char* (*)(Window*)>(&glfwGetClipboardString);
    constexpr static auto GetTime = static_cast<double(*)(void)>(&glfwGetTime);
    constexpr static auto SetTime = static_cast<void(*)(double)>(&glfwSetTime);
    constexpr static auto GetTimerValue = static_cast<uint64_t(*)(void)>(&glfwGetTimerValue);
    constexpr static auto GetTimerFrequency = static_cast<uint64_t(*)(void)>(&glfwGetTimerFrequency);
    constexpr static auto MakeContextCurrent = static_cast<void(*)(Window*)>(&glfwMakeContextCurrent);
    constexpr static auto GetCurrentContext = static_cast<Window*(*)(void)>(&glfwGetCurrentContext);
    constexpr static auto SwapBuffers = static_cast<void(*)(Window*)>(&glfwSwapBuffers);
    constexpr static auto SwapInterval = static_cast<void(*)(int)>(&glfwSwapInterval);
    constexpr static auto ExtensionSupported = static_cast<int(*)(const char*)>(&glfwExtensionSupported);
    constexpr static auto GetProcAddress = static_cast<GlProc(*)(const char*)>(&glfwGetProcAddress);
    constexpr static auto VulkanSupported = static_cast<int(*)(void)>(&glfwVulkanSupported);
    constexpr static auto GetRequiredInstanceExtensions = static_cast<const char** (*)(uint32_t*)>(&glfwGetRequiredInstanceExtensions);
    #if defined(VK_VERSION_1_0)
        constexpr static auto GetInstanceProcAddress = static_cast<VkProc(*)(VkInstance,const char*)>(&glfwGetInstanceProcAddress);
        constexpr static auto GetPhysicalDevicePresentationSupport = static_cast<int(*)(VkInstance,VkPhysicalDevice device, uint32_t)>(&glfwGetPhysicalDevicePresentationSupport);
        constexpr static auto CreateWindowSurface = static_cast<VkResult(*)(VkInstance,Window* window, const VkAllocationCallbacks* allocator, VkSurfaceKHR*)>(&glfwCreateWindowSurface);
    #endif

}
#endif
